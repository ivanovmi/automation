---
- name: Create ElasticSerach Data Dir
  file:
    path="{{ es_data_dir }}"
    state=directory
    mode=0755
    recurse=true
    owner=root
    group=docker


- name: Create ElasticSerach Config Dir
  file:
    path="{{ es_config_dir }}"
    state=directory
    mode=0755
    recurse=true
    owner=root
    group=docker


- name: Create ElasticSerach Config Dir Scripts
  file:
    path="{{ es_config_dir }}/scripts"
    state=directory
    mode=0755
    recurse=true
    owner=root
    group=docker


- name: Create ElasticSerach Log Dir
  file:
    path="{{ es_log_dir }}"
    state=directory
    mode=0755
    recurse=true
    owner=root
    group=docker



- name: Create ElasticSerach Config File
  template:
    src=templates/elasticsearch.yml
    dest="{{ es_config_dir }}/elasticsearch.yml"
    owner=root
    group=docker
    mode=0644


- name: Create ElasticSerach Config Log File
  template:
    src=templates/logging.yml
    dest="{{ es_config_dir }}/logging.yml"
    owner=root
    group=docker
    mode=0644

- name: DockerPy
  become: true
  pip:
    state=present 
    name=docker-compose

- name: ElasticSearch Container
  docker:
    name: elasticsearch
    image: library/elasticsearch
    state: reloaded
    pull: always
    ports:
    - "{{ ansible_default_ipv4['address'] }}:9200:9200"
    - "{{ ansible_default_ipv4['address'] }}:9300:9300"
    - "{{ ansible_default_ipv4['address'] }}:9200:9200/udp"
    - "{{ ansible_default_ipv4['address'] }}:9300:9300/udp"

    extra_hosts:
      es-node-1: "{{ hostvars['node-1']['ansible_default_ipv4']['address'] }}"
      es-node-2: "{{ hostvars['node-2']['ansible_default_ipv4']['address'] }}"
      es-node-3: "{{ hostvars['node-3']['ansible_default_ipv4']['address'] }}"
    volumes:
    - "{{ es_data_dir }}:/usr/share/elasticsearch/data"
    - "{{ es_config_dir }}:/usr/share/elasticsearch/config"
    - "{{ es_log_dir }}:/usr/share/elasticsearch/log"
